🔧Git 初始化與設定

git init                     # 初始化一個新的 Git 倉庫
git config --global user.name "你的名字"
git config --global user.email "你的信箱"
git config --list           # 檢查目前 Git 設定

📂 專案操作

git clone [URL]   

📦版本控制操作

git status                  # 查看目前狀態
git add [檔名]              # 加入暫存區
git add .                   # 加入所有變更的檔案
git commit -m "訊息"        # 提交變更並加上說明

📜查看紀錄與差異

git log                     # 查看提交紀錄
git log --oneline           # 精簡版紀錄
git diff                    # 查看尚未加入暫存區的變更
git diff --cached           # 查看已加入暫存區但尚未 commit 的變更

⏪ 回復與重設

git checkout -- [檔名]      # 還原檔案到上一次 commit 的狀態
git reset HEAD [檔名]       # 取消 add（從暫存區移除）
git reset --hard HEAD       # 回到最後一次 commit 的狀態（不可逆！）

🌿 分支操作

git branch                  # 查看所有分支
git branch [分支名]         # 建立新分支
git checkout [分支名]       # 切換分支
git checkout -b [分支名]    # 建立並切換到新分支
git merge [分支名]          # 合併某分支到目前分支
git branch -d [分支名]      # 刪除分支


☁️ 與遠端同步

git remote -v               # 查看遠端來源
git remote add origin [URL] # 連接到遠端
git push -u origin master   # 第一次推送
git push                    # 推送到遠端
git pull                    # 從遠端拉取並合併更新


